from typing import List, DefaultDict, TypedDict

class GraphState(TypedDict):
    """
    Represents the state of a graph.

    Attributes:
        query (str): The user query
        query_list (List[str]): The expanded list of queries based on the user query
        agent (str): The agent responsible for decision making/answer generating
        --- DEPRECATED --- contexts (DefaultDict[str, str]): The contexts retrieved. Keys are "kg" or "db" indicating the source of the context, and values are the contexts themselves.
        kg_context (str): The context retrieved from the knowledge graph
        db_context (str): The context retrieved from the vector database
        websearch_context (str): The context retrieved from the web search
        metrics (DefaultDict[str, str]): The numerical evaluations of metrics, such as "correctness", "relevance", "clarity", etc.
        reasons (DefaultDict[str, str]): The reasons for the the metrics. Keys are the metric names, and values are the reasons.
        answer (str): The answer generated by the agent
    """
    query: str
    query_list: List[str]
    agent: str
    # contexts: Annotated[DefaultDict[str, str], reduce_defaultdicts]
    kg_context: str
    db_context: str
    websearch_context: str
    metrics: DefaultDict[str, str]
    reasons: DefaultDict[str, str]
    answer: str